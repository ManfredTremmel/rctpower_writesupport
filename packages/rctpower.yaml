## This package requires rctclient
## You can install RCT Power Integration https://github.com/weltenwort/home-assistant-rct-power-integration

input_number:
  rct_soc_max:
    name: Max SOC target
    # ToDo: Read inital value when HA starts
    # initial: 97
    # ToDo: Find a good min-value (gt rct_soc_min)
    min: 30
    max: 97
    step: 1
    unit_of_measurement: "%"
    icon: "mdi:battery-high"

  rct_soc_min:
    name: Min SOC target
    # ToDo: Read inital value when HA starts
    # initial: 7
    min: 7
    # ToDo: Find a good max-value (lt rct_soc_max)
    max: 50
    step: 1
    unit_of_measurement: "%"
    icon: "mdi:battery-low"


switch:
  - platform: template
    switches:
      rct_lock_battery:
        friendly_name: Lock battery
        unique_id: rct_lock_battery
        turn_on:
          - action: shell_command.writerctpower
            data:
              object_name: "power_mng.soc_strategy"
              object_value: "2"
          - action: shell_command.writerctpower
            data:
              object_name: "power_mng.battery_power_extern"
              object_value: "0"
        turn_off:
          - action: shell_command.writerctpower
            data:
              object_name: "power_mng.soc_strategy"
              object_value: "4"
      
      rct_max_charge:
        friendly_name: QuickCharge battery
        unique_id: rct_quickcharge_battery
        turn_on:
          - action: shell_command.writerctpower
            data:
              object_name: "power_mng.soc_strategy"
              object_value: "2"
          - action: shell_command.writerctpower
            data:
              object_name: "power_mng.battery_power_extern"
              object_value: "0" # Change power in watt. Negative for charging, positiv for discharging. e.g -6000 for 6 kW charging
        turn_off:
          - action: shell_command.writerctpower
            data:
              object_name: "power_mng.soc_strategy"
              object_value: "4"




automation:
  - alias: "set_rct_soc_max"
    trigger:
      platform: state
      entity_id: input_number.rct_soc_max
    action:
      - action: shell_command.writerctpower
        data:
          object_name: "power_mng.soc_max"
          object_value: "{{states('input_number.rct_soc_max')|multiply(0.01)|round(2)}}"
    mode: queued
  - alias: "set_rct_soc_min"
    trigger:
      platform: state
      entity_id: input_number.rct_soc_min
    action:
      - action: shell_command.writerctpower
        data:
          object_name: "power_mng.soc_min"
          object_value: "{{states('input_number.rct_soc_min')|multiply(0.01)|round(2)}}"
      - action: shell_command.writerctpower
        data:
          object_name: "power_mng.soc_charge"
          object_value: "{{states('input_number.rct_soc_min')|multiply(0.01)-0.02|round(2)}}"
    mode: queued


shell_command:
  writerctpower: 'python /config/rct.py set {{ object_name }} {{ object_value }} --host=172.19.98.47'
